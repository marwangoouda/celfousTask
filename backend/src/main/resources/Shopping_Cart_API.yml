openapi: 3.0.1
info:
  title: Shopping Cart API
  description: API for managing product cart
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Generated server url

tags:
  - name: carts
    description: the carts API
  - name: auth
    description: authentication endpoints

# Enforce bearer token on all operations by default
security:
  - bearerAuth: []

paths:

  # Public login endpoint (no token required)
  /api/v1/auth/login:
    post:
      tags:
        - auth
      summary: Obtain JWT by logging in
      operationId: loginUser
      security: []                            # override global: no token needed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: JWT issued successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials

  # Protected validate endpoint (must supply Authorization header)
  /api/v1/auth/validate:
    get:
      tags:
        - auth
      summary: Validate a JWT
      operationId: validateToken
      parameters:
        - name: Authorization
          in: header
          description: Bearer token to validate
          required: true
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '200':
          description:
        '401':
          description: Token missing or invalid

  /api/v1/carts/items:
    post:
      tags:
        - carts
      summary: Add an item to the shopping cart
      operationId: addItemToCart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemInput"
      parameters:
        - name: username
          in: header
          description: unique value per user
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Item added to cart successfully
        "404":
          description: Item not found
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object

  /api/v1/carts/items/{itemId}:
    delete:
      tags:
        - carts
      summary: Remove an item from the shopping cart
      operationId: removeItemFromCart
      parameters:
        - name: itemId
          in: path
          description: ID of the item to remove from the cart
          required: true
          schema:
            type: string
        - name: username
          in: header
          description: unique value per user
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Item removed from cart successfully
        "404":
          description: Item not found
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object

    patch:
      tags:
        - carts
      summary: Update item quantity in the shopping cart
      operationId: editCartItem
      parameters:
        - name: itemId
          in: path
          description: ID of the item to edit in the cart
          required: true
          schema:
            type: string
        - name: username
          in: header
          description: unique value per user
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditCartItemInput"
      responses:
        "200":
          description: Cart updated successfully
          content:
            '*/*':
              schema:
                type: integer
                format: int32
        "404":
          description: Cart or Item not found
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object

  /api/v1/carts:
    get:
      tags:
        - carts
      summary: Retrieve the shopping cart
      operationId: getCart
      parameters:
        - name: username
          in: header
          description: unique value per user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Shopping cart retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartResponse"
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object

    delete:
      tags:
        - carts
      summary: Clear the shopping cart
      operationId: clearCart
      parameters:
        - name: username
          in: header
          description: unique value per user
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Shopping cart cleared successfully
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
          format: password

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT to be used in Authorization Bearer <token>`
        username:
          type: string
          description: username of the authenticated user`

    ItemInput:
      type: object
      properties:
        itemId:
          type: string

    EditCartItemInput:
      type: object
      properties:
        operation:
          type: string
          enum:
            - INCREASE
            - DECREASE

    CartItemResponse:
      type: object
      properties:
        itemId:
          type: string
        quantity:
          type: integer
          format: int32
        price:
          type: number
        name:
          type: string

    CartResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItemResponse"
